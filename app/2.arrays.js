console.log('Arrays');

// Task 01
// Создать массив. Получить последний элемент массива.
// 1.    Без удаления этого элемента из массива.
// 2.    С удалением этого элемента из массива



// Task 02
// Создать массив. Добавить элемент в конец массива.
// 1    Получить тот же массив
// 2    Получить новый массив



// Task 03
// Создать массив. Обойти элементы массива и вывести их в консоль.



// Task 04
// Создать массив чисел в диапазоне от 0 до 100.
// Вывети сумму тех элементов, которые удовлетворяют условию arr[i] > 50.



// Task 05
// Создать массив строк. На основе этого массива создать строку –
// объдинить все элементы массива используя определенный разделитель.



// Task 06
// Создать массив чисел от 1 до 20 в случайном порядке.
// Отcортировать массив по возрастанию. Получить массив отсортрованный
// в обратном порядке и вывести его в консоль.



// Task 07
// Создать массив [3, 0, -1, 12, -2, -4, 0, 7, 2]
// На его основе создать новый массив [-1, -2, -4, 0, 0, 3, 12, 7, 2] –
// сначала отрицательные числа, затем нули, затем положительные числа.
// Порядок оставить без изменения.



// Task 08
// 1. Создайте массив styles с элементами «Джаз», «Блюз».
// 2. Добавьте в конец значение «Рок-н-Ролл»
// 3. Замените предпоследнее значение с конца на «Классика».
//    Код замены предпоследнего значения должен работать для массивов любой длины.
// 4. Удалите первое значение массива и выведите его alert.
// 5. Добавьте в начало значения «Рэп» и «Регги».



// Task 09
// Подсчитать в указанной строке отдельно количество букв r, k, t.
// dskjdhfkjshdfkjhsdkjureyteiruyiqywehjkh



// Task 10
// Создать массив. Получить случайный элемент из массива.



// Task 11
// Создайте функцию filterRange(arr, a, b), которая принимает массив чисел arr
// и возвращает новый массив, который содержит только числа из arr
// из диапазона от a до b.Функция не должна менять arr.



// Task 12
// Создать двумерный массив:
// 1 2 3
// 4 5 6
// 7 8 9
// Вывести его в консоль.




// Task 13
// Преобразовать двумерный массив в одномерный.



// Task 14
// Создать FIFO (first-in, first-out) очередь.
// Выберите один из вариантов реализации:
// - отдельные функции get/ set,
// - функция - конструктор,
// - класс.



// Task 15
// Создать массив. На основе получить другой массив – подмножество элементов
// оригинального массива начиная с индекса a и заканчивая индексом b.




// Task 16
// Создать массив. Найти индекс указаного элемента в массиве.



// Task 17
// Создать массив с дублями элементов. На его основе создать массив
// уникальных элементов (удалить дубли).



// Task 18
// Создать массив с дублями. Найти первый элемент, который дублируется.
// Заменить этот элемент и все его копии на указанный символ.



// Task 19
// Создать массив целых чисел. На его основе создать массивы – представления
// этих же чисел в бинарном, восьмеричном и шестнадцатеричном виде.



// Task 20
// Получить из строки «a big brown fox jumps over the lazy dog» массив слов,
// который содержит элементы, длина которых не больше 3 символа.



// Task 21
// Создать массив, который содержит строки и числа. Проверить, содержит ли массив
// только строки.




















