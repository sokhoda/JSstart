console.log('Objects');

// Task 01
// Реализовать функцию-конструктор Tune(song, artist) для создания объектов
// с публичными свойствами title (получает значение song), artist и методом concat(),
// который возвращает конкатенацию значений свойств title и artist.
// Создать несколько объектов. Вызвать их метод concat().



// Task 02
// Реализовать функцию-конструктор Tune(song, artist) для создания объектов
// с приватными свойствами title (получает значение song), artist и публичным
// методом concat (), который возвращает конкатенацию значений свойств
// title и artist.
// Создать несколько объектов. Вызвать их метод concat().



// Task 03
// Реализовать для предыдущего объекта метод addCategory(categoryName),
// который принимает название категории и устанавливает его в соответствующее
// публичное свойство.
// Добавить категорию к объекту, вывести объект в консоль.



// Task 04
// Расширить прототип объекта String методом exclaim() если его нет в прототипе,
// который добавляет к строке знак восклицания и выводит строку в консоль.




// Task 05
// Создать функцию-конструктор Book(title, author). Добавить два метода:
// getTitle, getAuthor. Создать функцию-конструктор
// TechBook(title, author, category). Передать параметры title, author
// функции-конструктору Book. Добавить два метода: getCategory, getBook –
// возвращает строку с параметрами.
// 1. Для реализации наследования используйте Object.create();
// 2. Используйте синтаксис классов.



// Task 06
// Cоздать объект data и сконфигурирвать его свойства:
// 1. id: значение = 1, изменяемое.
// 2. type: значение = "primary", перечисляемое
// 3. category: getter возвращает значение поля _category,
//    setter устанавливает значение поля _category, перечисляемое, конфигурируемое.
// Используя for-in вывести свойства объекта.



// Task 07
// Создать литерал объекта с двумя свойствами. Запретить расширять объект.



// Task 08
// Создать функцию-конструктор для конструирования объектов Person.
// Создать два метода setFirstName() и setLastName(). Методы должны вызываться
// в цепочке.



// Task 09 TodoList App
// Реализовать класс «список задач» со следющим функционалом:
// Добавить задачу в список
// Получить и вывести в консоль список всех задач в формате "[new] Task 1",
// "[completed] Task2"
// Отметить указанную задачу как выполненную
// Удалить задачу из списка
// Отсортировать задачи по алфавиту по возрастанию или по убыванию
// Очистить список задач



// Task 10
// Создать текущую дату и вывести ее в формате dd.mm.yyyy и dd Month yyyy




// Task 11
// Есть строка «15.03.2016». Создать на ее основе объект Date




// Task 12
// Создать объект Date, который содержит завтрашнюю дату, первое число текущего
// месяца, последнее число текущего месяца



// Task 13
// Измерить время суммирования чисел от 1 до 1000.



// Task 14
// Подсчитать количество дней с текущей даты до Нового года








